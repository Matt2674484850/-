# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '速算总结界面.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5.QtCore import QPoint
from PyQt5.QtGui import QCursor
from PyQt5 import QtCore, QtGui, QtWidgets, Qt
from PyQt5.QtWidgets import *
from PyQt5.QtCore import *
from PyQt5.QtGui import *

class Ui_SS_Finally(QMainWindow):
    def setupUi(self, SS_Finally):
        SS_Finally.setObjectName("SS_Finally")
        SS_Finally.resize(400, 322)
        SS_Finally.setWindowFlags(QtCore.Qt.FramelessWindowHint|QtCore.Qt.WindowStaysOnTopHint)
        font = QtGui.QFont()
        font.setFamily("楷体")
        SS_Finally.setFont(font)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/小窗口图标/图片文件夹/成绩单.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        SS_Finally.setWindowIcon(icon)
        SS_Finally.setStyleSheet("#SS_Finally{border-image: url(:/小窗口图标/图片文件夹/背单词总结页面背景图.webp);}")
        self.xiangmu = QtWidgets.QLabel(SS_Finally)
        self.xiangmu.setGeometry(QtCore.QRect(190, 20, 201, 16))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(12)
        font.setUnderline(True)
        self.xiangmu.setFont(font)
        self.xiangmu.setObjectName("xiangmu")
        self.SSnandu = QtWidgets.QLabel(SS_Finally)
        self.SSnandu.setGeometry(QtCore.QRect(0, 90, 81, 31))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(14)
        self.SSnandu.setFont(font)
        self.SSnandu.setObjectName("SSnandu")
        self.SSnandu_input = QtWidgets.QLabel(SS_Finally)
        self.SSnandu_input.setGeometry(QtCore.QRect(270, 90, 121, 31))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(14)
        self.SSnandu_input.setFont(font)
        self.SSnandu_input.setObjectName("SSnandu_input")
        self.SSzhengquelv = QtWidgets.QLabel(SS_Finally)
        self.SSzhengquelv.setGeometry(QtCore.QRect(0, 150, 81, 31))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(14)
        self.SSzhengquelv.setFont(font)
        self.SSzhengquelv.setObjectName("SSzhengquelv")
        self.SSzhengquelv_input = QtWidgets.QLabel(SS_Finally)
        self.SSzhengquelv_input.setGeometry(QtCore.QRect(270, 150, 121, 31))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(14)
        self.SSzhengquelv_input.setFont(font)
        self.SSzhengquelv_input.setObjectName("SSzhengquelv_input")
        self.good = QtWidgets.QLabel(SS_Finally)
        self.good.setGeometry(QtCore.QRect(0, 200, 401, 21))
        self.good.setObjectName("good")
        self.star1 = QtWidgets.QPushButton(SS_Finally)
        self.star1.setGeometry(QtCore.QRect(70, 240, 41, 31))
        self.star1.setStyleSheet("border-image: url(:/小窗口图标/图片文件夹/星星.png);\n"
"border-image: url(:/小窗口图标/图片文件夹/星星 (1).png);")
        self.star1.setText("")
        self.star1.setObjectName("star1")
        self.star1_2 = QtWidgets.QPushButton(SS_Finally)
        self.star1_2.setGeometry(QtCore.QRect(120, 240, 41, 31))
        self.star1_2.setStyleSheet("border-image: url(:/小窗口图标/图片文件夹/星星.png);\n"
"border-image: url(:/小窗口图标/图片文件夹/星星 (1).png);")
        self.star1_2.setText("")
        self.star1_2.setObjectName("star1_2")
        self.star1_3 = QtWidgets.QPushButton(SS_Finally)
        self.star1_3.setGeometry(QtCore.QRect(170, 240, 41, 31))
        self.star1_3.setStyleSheet("border-image: url(:/小窗口图标/图片文件夹/星星.png);\n"
"border-image: url(:/小窗口图标/图片文件夹/星星 (1).png);")
        self.star1_3.setText("")
        self.star1_3.setObjectName("star1_3")
        self.star1_4 = QtWidgets.QPushButton(SS_Finally)
        self.star1_4.setGeometry(QtCore.QRect(220, 240, 41, 31))
        self.star1_4.setStyleSheet("border-image: url(:/小窗口图标/图片文件夹/星星.png);\n"
"border-image: url(:/小窗口图标/图片文件夹/星星 (1).png);")
        self.star1_4.setText("")
        self.star1_4.setObjectName("star1_4")
        self.star1_5 = QtWidgets.QPushButton(SS_Finally)
        self.star1_5.setGeometry(QtCore.QRect(270, 240, 41, 31))
        self.star1_5.setStyleSheet("border-image: url(:/小窗口图标/图片文件夹/星星.png);\n"
"border-image: url(:/小窗口图标/图片文件夹/星星 (1).png);")
        self.star1_5.setText("")
        self.star1_5.setObjectName("star1_5")
        self.back = QtWidgets.QPushButton(SS_Finally)
        self.back.setGeometry(QtCore.QRect(300, 290, 91, 23))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(10)
        self.back.setFont(font)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/子标/图片文件夹/首页.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.back.setIcon(icon1)
        self.back.setObjectName("back")
        self.back.setFlat(True)

        self.retranslateUi(SS_Finally)
        QtCore.QMetaObject.connectSlotsByName(SS_Finally)

    def retranslateUi(self, SS_Finally):
        _translate = QtCore.QCoreApplication.translate
        SS_Finally.setWindowTitle(_translate("SS_Finally", "速算成绩单"))
        self.xiangmu.setText(_translate("SS_Finally", "项目 ----------   速算"))
        self.SSnandu.setText(_translate("SS_Finally", "难度："))
        self.SSnandu_input.setText(_translate("SS_Finally", "难度输入框"))
        self.SSzhengquelv.setText(_translate("SS_Finally", "正确率："))
        self.SSzhengquelv_input.setText(_translate("SS_Finally", "难度输入框"))
        self.good.setText(_translate("SS_Finally", "你真棒！"))
        self.back.setText(_translate("SS_Finally", "返回主页"))
        self.back.setShortcut(_translate("SS_Finally", "Return"))
        self.star1.hide()
        self.star1_2.hide()
        self.star1_3.hide()
        self.star1_4.hide()
        self.star1_5.hide()
        screen = QDesktopWidget().screenGeometry()
        size = self.geometry()
        newLeft = (screen.width() - size.width()) // 2
        newTop = (screen.height() - size.height()) // 2
        self.move(newLeft, newTop)
        _startPos = None
        _endPos = None
        _isTracking = False

    def mouseMoveEvent(self, e: QMouseEvent):  # 重写移动事件
        try:
            self._endPos = e.pos() - self._startPos
            self.move(self.pos() + self._endPos)
        except:
            pass

    def mousePressEvent(self, e: QMouseEvent):
        if e.button() == Qt.LeftButton:
            self._isTracking = True
            self._startPos = QPoint(e.x(), e.y())

    def mouseReleaseEvent(self, e: QMouseEvent):
        if e.button() == Qt.LeftButton:
            self._isTracking = False
            self._startPos = None
            self._endPos = None

    def __init__(self):
        super(Ui_SS_Finally, self).__init__()
        self.setupUi(self)
from 副文件 import img_rc