# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '管理者界面.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import *
from PyQt5.QtCore import *
from PyQt5.QtGui import *
from datetime import datetime
from 副文件 import img_rc


class Ui_GLZ_jiemian(QMainWindow):
    def setupUi(self, GLZ_jiemian):
        GLZ_jiemian.setObjectName("GLZ_jiemian")
        GLZ_jiemian.resize(590, 507)
        font = QtGui.QFont()
        font.setFamily("楷体")
        GLZ_jiemian.setFont(font)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/png/图片文件夹/管理者图标.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        GLZ_jiemian.setWindowIcon(icon)
        GLZ_jiemian.setStyleSheet("#GLZ_jiemian{border-image: url(:/管理者/图片文件夹/管理者背景.jpeg);}\n"
"")
        self.GLZ_title = QtWidgets.QLabel(GLZ_jiemian)
        self.GLZ_title.setGeometry(QtCore.QRect(70, 0, 451, 61))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(14)
        self.GLZ_title.setFont(font)
        self.GLZ_title.setAlignment(QtCore.Qt.AlignCenter)
        self.GLZ_title.setObjectName("GLZ_title")
        self.GLZ_tableWidget = QtWidgets.QTableWidget(GLZ_jiemian)
        self.GLZ_tableWidget.setGeometry(QtCore.QRect(0, 70, 591, 351))
        font = QtGui.QFont()
        font.setFamily("楷体")
        self.GLZ_tableWidget.setFont(font)
        self.GLZ_tableWidget.setStyleSheet("background-color: rgb(255, 255, 255,0);")
        self.GLZ_tableWidget.setFrameShape(QtWidgets.QFrame.Box)
        self.GLZ_tableWidget.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.GLZ_tableWidget.setEditTriggers(QtWidgets.QAbstractItemView.DoubleClicked)
        self.GLZ_tableWidget.setTextElideMode(QtCore.Qt.ElideMiddle)
        self.GLZ_tableWidget.setRowCount(2)
        self.GLZ_tableWidget.setObjectName("GLZ_tableWidget")
        self.GLZ_tableWidget.setColumnCount(3)
        item = QtWidgets.QTableWidgetItem()
        self.GLZ_tableWidget.setVerticalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.GLZ_tableWidget.setVerticalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.GLZ_tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.GLZ_tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.GLZ_tableWidget.setHorizontalHeaderItem(2, item)
        self.GLZ_tableWidget.horizontalHeader().setVisible(True)
        self.GLZ_tableWidget.horizontalHeader().setCascadingSectionResizes(False)
        self.GLZ_tableWidget.horizontalHeader().setStretchLastSection(True)
        self.GLZ_tableWidget.verticalHeader().setVisible(False)
        self.GLZ_tableWidget.verticalHeader().setHighlightSections(True)
        self.GLZ_tableWidget.verticalHeader().setSortIndicatorShown(False)
        self.GLZ_tableWidget.verticalHeader().setStretchLastSection(False)
        self.GLZ_increasebutton = QtWidgets.QPushButton(GLZ_jiemian)
        self.GLZ_increasebutton.setGeometry(QtCore.QRect(40, 445, 75, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(12)
        self.GLZ_increasebutton.setFont(font)
        self.GLZ_increasebutton.setFocusPolicy(QtCore.Qt.WheelFocus)
        self.GLZ_increasebutton.setAutoFillBackground(False)
        self.GLZ_increasebutton.setStyleSheet("QPushButton:pressed{padding-top:5px;padding-left:5px;border-radius:10px;color: rgb(255, 0, 0);\n"
"}")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/管理者/图片文件夹/管理者-添加.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.GLZ_increasebutton.setIcon(icon1)
        self.GLZ_increasebutton.setAutoDefault(False)
        self.GLZ_increasebutton.setDefault(True)
        self.GLZ_increasebutton.setFlat(True)
        self.GLZ_increasebutton.setObjectName("GLZ_increasebutton")
        self.GLZ_editbutton = QtWidgets.QPushButton(GLZ_jiemian)
        self.GLZ_editbutton.setGeometry(QtCore.QRect(180, 445, 75, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(12)
        self.GLZ_editbutton.setFont(font)
        self.GLZ_editbutton.setFocusPolicy(QtCore.Qt.WheelFocus)
        self.GLZ_editbutton.setAutoFillBackground(False)
        self.GLZ_editbutton.setStyleSheet("QPushButton:pressed{padding-top:5px;padding-left:5px;border-radius:10px;color: rgb(255, 0, 0);\n"
"}")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/管理者/图片文件夹/管理者-修改.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.GLZ_editbutton.setIcon(icon2)
        self.GLZ_editbutton.setAutoDefault(False)
        self.GLZ_editbutton.setDefault(True)
        self.GLZ_editbutton.setFlat(True)
        self.GLZ_editbutton.setObjectName("GLZ_editbutton")
        self.GLZ_deletebutton = QtWidgets.QPushButton(GLZ_jiemian)
        self.GLZ_deletebutton.setGeometry(QtCore.QRect(320, 445, 75, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(12)
        self.GLZ_deletebutton.setFont(font)
        self.GLZ_deletebutton.setFocusPolicy(QtCore.Qt.WheelFocus)
        self.GLZ_deletebutton.setAutoFillBackground(False)
        self.GLZ_deletebutton.setStyleSheet("QPushButton:pressed{padding-top:5px;padding-left:5px;border-radius:10px;color: rgb(255, 0, 0);\n"
"}")
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/管理者/图片文件夹/管理者-删除.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.GLZ_deletebutton.setIcon(icon3)
        self.GLZ_deletebutton.setAutoDefault(False)
        self.GLZ_deletebutton.setDefault(True)
        self.GLZ_deletebutton.setFlat(True)
        self.GLZ_deletebutton.setObjectName("GLZ_deletebutton")
        self.GLZ_backbutton = QtWidgets.QPushButton(GLZ_jiemian)
        self.GLZ_backbutton.setGeometry(QtCore.QRect(460, 445, 75, 40))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(12)
        self.GLZ_backbutton.setFont(font)
        self.GLZ_backbutton.setFocusPolicy(QtCore.Qt.WheelFocus)
        self.GLZ_backbutton.setAutoFillBackground(False)
        self.GLZ_backbutton.setStyleSheet("QPushButton:pressed{padding-top:5px;padding-left:5px;border-radius:10px;color: rgb(255, 0, 0);\n"
"}")
        self.GLZ_backbutton.setIcon(icon2)
        self.GLZ_backbutton.setAutoDefault(False)
        self.GLZ_backbutton.setDefault(True)
        self.GLZ_backbutton.setFlat(True)
        self.GLZ_backbutton.setObjectName("GLZ_backbutton")
        self.GLZ_quitpicture = QtWidgets.QPushButton(GLZ_jiemian)
        self.GLZ_quitpicture.setGeometry(QtCore.QRect(530, 0, 61, 31))
        self.GLZ_quitpicture.setStyleSheet("border-image: url(:/管理者/图片文件夹/管理者-退出.png);")
        self.GLZ_quitpicture.setText("")
        self.GLZ_quitpicture.setFlat(True)
        self.GLZ_quitpicture.setObjectName("GLZ_quitpicture")
        self.GLZ_leftbutton = QtWidgets.QPushButton(GLZ_jiemian)
        self.GLZ_leftbutton.setGeometry(QtCore.QRect(0, 40, 31, 23))
        font = QtGui.QFont()
        font.setFamily("Andalus")
        font.setPointSize(18)
        self.GLZ_leftbutton.setFont(font)
        self.GLZ_leftbutton.setStyleSheet("QPushButton{color: rgb(0, 170, 255);background-color: rgb(172, 255, 153);}\n"
"QPushButton:pressed{padding-top:5px;padding-left:5px;border-radius:10px;color: rgb(255, 0, 0);\n"
"}")
        self.GLZ_leftbutton.setObjectName("GLZ_leftbutton")
        self.GLZ_rightbutton = QtWidgets.QPushButton(GLZ_jiemian)
        self.GLZ_rightbutton.setGeometry(QtCore.QRect(40, 40, 31, 23))
        font = QtGui.QFont()
        font.setFamily("Andalus")
        font.setPointSize(18)
        font.setBold(False)
        font.setWeight(50)
        self.GLZ_rightbutton.setFont(font)
        self.GLZ_rightbutton.setStyleSheet("QPushButton{color: rgb(0, 170, 255);background-color: rgb(172, 255, 153);}\n"
"QPushButton:pressed{padding-top:5px;padding-left:5px;border-radius:10px;color: rgb(255, 0, 0);\n"
"}")
        self.GLZ_rightbutton.setFlat(False)
        self.GLZ_rightbutton.setObjectName("GLZ_rightbutton")
        self.GLZ_questionbutton = QtWidgets.QPushButton(GLZ_jiemian)
        self.GLZ_questionbutton.setGeometry(QtCore.QRect(80, 40, 31, 23))
        font = QtGui.QFont()
        font.setFamily("Andalus")
        font.setPointSize(18)
        font.setBold(False)
        font.setWeight(50)
        self.GLZ_questionbutton.setFont(font)
        self.GLZ_questionbutton.setStyleSheet("QPushButton{color: rgb(0, 170, 255);background-color: rgb(172, 255, 153);}\n"
"QPushButton:pressed{padding-top:5px;padding-left:5px;border-radius:10px;color: rgb(255, 0, 0);\n"
"}")
        self.GLZ_questionbutton.setFlat(False)
        self.GLZ_questionbutton.setObjectName("GLZ_questionbutton")

        self.retranslateUi(GLZ_jiemian)
        QtCore.QMetaObject.connectSlotsByName(GLZ_jiemian)

    def retranslateUi(self, GLZ_jiemian):
        _translate = QtCore.QCoreApplication.translate
        GLZ_jiemian.setWindowTitle(_translate("GLZ_jiemian", "管理者模式"))
        self.GLZ_title.setText(_translate("GLZ_jiemian", "用户操作数据"))
        item = self.GLZ_tableWidget.verticalHeaderItem(0)
        item.setText(_translate("GLZ_jiemian", "新建行"))
        item = self.GLZ_tableWidget.verticalHeaderItem(1)
        item.setText(_translate("GLZ_jiemian", "新建行"))
        item = self.GLZ_tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("GLZ_jiemian", "新建列"))
        item = self.GLZ_tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("GLZ_jiemian", "新建列"))
        item = self.GLZ_tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("GLZ_jiemian", "新建列"))
        self.GLZ_increasebutton.setToolTip(_translate("GLZ_jiemian", "增加一个项目"))
        self.GLZ_increasebutton.setText(_translate("GLZ_jiemian", "增加"))
        self.GLZ_editbutton.setToolTip(_translate("GLZ_jiemian", "选择一个单元格进行修改"))
        self.GLZ_editbutton.setText(_translate("GLZ_jiemian", "修改"))
        self.GLZ_deletebutton.setToolTip(_translate("GLZ_jiemian", "选择一行内容进行删除"))
        self.GLZ_deletebutton.setText(_translate("GLZ_jiemian", "删除"))
        self.GLZ_backbutton.setToolTip(_translate("GLZ_jiemian", "选择一个单元格进行修改"))
        self.GLZ_backbutton.setText(_translate("GLZ_jiemian", "撤销"))
        self.GLZ_quitpicture.setToolTip(_translate("GLZ_jiemian", "退出"))
        self.GLZ_leftbutton.setText(_translate("GLZ_jiemian", "<"))
        self.GLZ_rightbutton.setText(_translate("GLZ_jiemian", ">"))
        self.GLZ_questionbutton.setText(_translate("GLZ_jiemian", "?"))
        screen = QDesktopWidget().screenGeometry()
        size = self.geometry()
        newLeft = (screen.width() - size.width()) // 2
        newTop = (screen.height() - size.height()) // 2
        self.move(newLeft, newTop)
        GLZ_jiemian.setWindowFlags(QtCore.Qt.FramelessWindowHint)
        _startPos = None
        _endPos = None
        _isTracking = False

    def mouseMoveEvent(self, e: QMouseEvent):  # 重写移动事件
        try:
            self._endPos = e.pos() - self._startPos
            self.move(self.pos() + self._endPos)
        except:
            pass

    def mousePressEvent(self, e: QMouseEvent):
        if e.button() == Qt.LeftButton:
            self._isTracking = True
            self._startPos = QPoint(e.x(), e.y())

    def mouseReleaseEvent(self, e: QMouseEvent):
        if e.button() == Qt.LeftButton:
            self._isTracking = False
            self._startPos = None
            self._endPos = None

    def __init__(self):
        super(Ui_GLZ_jiemian, self).__init__()
        self.setupUi(self)
