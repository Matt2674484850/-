# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '信息界面.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import *
from PyQt5.QtCore import *
from PyQt5.QtGui import *
from 副文件 import img_rc

class Ui_KSFX_Message(QMainWindow):
    def setupUi(self, KSFX_Message):
        KSFX_Message.setObjectName("KSFX_Message")
        KSFX_Message.resize(405, 230)
        font = QtGui.QFont()
        font.setFamily("楷体")
        KSFX_Message.setFont(font)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/小窗口图标/图片文件夹/信息.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        KSFX_Message.setWindowIcon(icon)
        KSFX_Message.setStyleSheet("#KSFX_Message{background-color: rgb(255, 255, 255);}")
        self.father = QtWidgets.QLabel(KSFX_Message)
        self.father.setGeometry(QtCore.QRect(0, 0, 71, 16))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(11)
        self.father.setFont(font)
        self.father.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignTop)
        # 使窗口居中
        screen = QDesktopWidget().screenGeometry()
        size = self.geometry()
        newLeft = (screen.width() - size.width()) // 2
        newTop = (screen.height() - size.height()) // 2
        self.move(newLeft, newTop)
        self.father.setObjectName("father")
        self.title = QtWidgets.QLabel(KSFX_Message)
        self.title.setGeometry(QtCore.QRect(50, 10, 290, 20))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(14)
        self.title.setFont(font)
        self.title.setAlignment(QtCore.Qt.AlignCenter)
        self.title.setWordWrap(False)
        self.title.setObjectName("title")
        self.giveup_button = QtWidgets.QPushButton(KSFX_Message)
        self.giveup_button.setGeometry(QtCore.QRect(70, 180, 81, 41))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(12)
        self.giveup_button.setFont(font)
        self.giveup_button.setFlat(True)
        self.giveup_button.setObjectName("giveup_button")
        self.sure_button = QtWidgets.QPushButton(KSFX_Message)
        self.sure_button.setGeometry(QtCore.QRect(250, 180, 81, 41))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(12)
        self.sure_button.setFont(font)
        self.sure_button.setFlat(True)
        self.sure_button.setObjectName("sure_button")
        self.short_label = QtWidgets.QLabel(KSFX_Message)
        self.short_label.setGeometry(QtCore.QRect(0, 40, 401, 141))
        font = QtGui.QFont()
        font.setFamily("楷体")
        font.setPointSize(12)
        self.short_label.setFont(font)
        self.short_label.setAlignment(QtCore.Qt.AlignCenter)
        self.short_label.setWordWrap(True)
        self.short_label.setObjectName("short_label")
        self.picture = QtWidgets.QPushButton(KSFX_Message)
        self.picture.setGeometry(QtCore.QRect(360, 0, 41, 31))
        self.picture.setStyleSheet("border-image: url(:/小窗口图标/图片文件夹/信息.png);")
        self.picture.setText("")
        self.picture.setFlat(True)
        self.picture.setObjectName("picture")
        self.textBrowser = QtWidgets.QTextBrowser(KSFX_Message)
        self.textBrowser.setGeometry(QtCore.QRect(0, 40, 401, 141))
        font = QtGui.QFont()
        font.setFamily("楷体")
        self.textBrowser.setFont(font)
        self.textBrowser.setStyleSheet("background-color: rgb(255, 255, 255,0);")
        self.textBrowser.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.textBrowser.setObjectName("textBrowser")

        self.retranslateUi(KSFX_Message)
        QtCore.QMetaObject.connectSlotsByName(KSFX_Message)

    def retranslateUi(self, KSFX_Message):
        _translate = QtCore.QCoreApplication.translate
        KSFX_Message.setWindowTitle(_translate("KSFX_Message", "考试复习系统"))
        self.father.setText(_translate("KSFX_Message", "通知/询问"))
        self.title.setText(_translate("KSFX_Message", "这里是标题内容"))
        self.giveup_button.setToolTip(_translate("KSFX_Message", "Ctrl+G"))
        self.giveup_button.setText(_translate("KSFX_Message", "取消（G）"))
        self.giveup_button.setShortcut(_translate("KSFX_Message", "Alt+G"))
        self.sure_button.setToolTip(_translate("KSFX_Message", "Alt+S"))
        self.sure_button.setText(_translate("KSFX_Message", "确定（S）"))
        self.sure_button.setShortcut(_translate("KSFX_Message", "Alt+S"))
        self.short_label.setText(_translate("KSFX_Message", "这里是短行通知"))
        self.textBrowser.setHtml(_translate("KSFX_Message", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'楷体\'; font-size:9pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">这里是多行输入</p></body></html>"))
        KSFX_Message.setWindowFlags(QtCore.Qt.FramelessWindowHint | QtCore.Qt.WindowStaysOnTopHint)
        KSFX_Message.setWindowTitle(_translate("KSFX_Message", "考试复习系统"))
        self.textBrowser.hide()
        _startPos = None
        _endPos = None
        _isTracking = False
        self.answer = -1
        self.sure_button.setStyleSheet("QPushButton:pressed{padding-top:5px;padding-left:5px;border-radius:10px;color: rgb(255, 0, 0);}")
        self.giveup_button.setStyleSheet("QPushButton:pressed{padding-top:5px;padding-left:5px;border-radius:10px;color: rgb(255, 0, 0);}")

    def Give_UP_Second(self):
        self.answer = 0

    def Give_Up(self):
        self.close()

    def Sure(self):
        self.answer = 1

    def Result(self):
        self.Answer = self.answer

    def mouseMoveEvent(self, e: QMouseEvent):  # 重写移动事件
        try:
            self._endPos = e.pos() - self._startPos
            self.move(self.pos() + self._endPos)
        except:
            pass

    def mousePressEvent(self, e: QMouseEvent):
        if e.button() == Qt.LeftButton:
            self._isTracking = True
            self._startPos = QPoint(e.x(), e.y())

    def mouseReleaseEvent(self, e: QMouseEvent):
        if e.button() == Qt.LeftButton:
            self._isTracking = False
            self._startPos = None
            self._endPos = None

    def __init__(self, father, title, circle):
        _translate = QtCore.QCoreApplication.translate
        super(Ui_KSFX_Message, self).__init__()
        self.setupUi(self)
        if father == '询问':
            self.textBrowser.hide()
            self.short_label.show()
            self.father.setText(_translate("KSFX_Message", "询问"))
            self.giveup_button.clicked.connect(self.Give_UP_Second)
            self.sure_button.clicked.connect(self.Sure)
            self.title.setText(_translate("KSFX_Message", title))
            self.short_label.setText(_translate('KSFX_Message', circle))
        elif father == '通知':
            self.textBrowser.hide()
            self.short_label.show()
            self.father.setText(_translate("KSFX_Message", "通知"))
            self.giveup_button.hide()
            self.sure_button.setGeometry(QtCore.QRect(160, 180, 81, 41))
            self.sure_button.clicked.connect(self.Give_Up)
            self.title.setText(_translate("KSFX_Message", title))
            self.short_label.setText(_translate('KSFX_Message', circle))
        elif father == '警告':
            self.textBrowser.hide()
            self.short_label.show()
            self.father.setText(_translate("KSFX_Message", "警告"))
            self.giveup_button.setEnabled(False)
            self.giveup_button.hide()
            self.sure_button.setGeometry(QtCore.QRect(160, 180, 81, 41))
            self.sure_button.clicked.connect(self.Give_Up)
            self.title.setText(_translate("KSFX_Message", title))
            self.short_label.setText(_translate('KSFX_Message', circle))
        elif father == '多行通知':
            self.father.setText(_translate("KSFX_Message", "通知"))
            self.giveup_button.hide()
            self.sure_button.setGeometry(QtCore.QRect(160, 180, 81, 41))
            self.sure_button.clicked.connect(self.Give_Up)
            self.title.setText(_translate("KSFX_Message", title))
            self.textBrowser.show()
            self.short_label.hide()
            self.textBrowser.setPlainText(_translate('KSFX_Message', circle))
            self.textBrowser.setWordWrapMode(True)
        else:
            print('father信息有误，请重新输入')
            self.close()
